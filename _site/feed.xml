<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://maximerousseau.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://maximerousseau.com/" rel="alternate" type="text/html" /><updated>2021-04-02T21:14:55+02:00</updated><id>https://maximerousseau.com/feed.xml</id><title type="html">MaximeRousseau.com</title><entry><title type="html">Auto Backup for Unifi CloudKey</title><link href="https://maximerousseau.com/auto-backup-for-unifi-cloudkey/" rel="alternate" type="text/html" title="Auto Backup for Unifi CloudKey" /><published>2019-08-09T17:15:09+02:00</published><updated>2019-08-09T17:15:09+02:00</updated><id>https://maximerousseau.com/auto-backup-for-unifi-cloudkey</id><content type="html" xml:base="https://maximerousseau.com/auto-backup-for-unifi-cloudkey/">&lt;p&gt;Working with Ubiquiti gear is a wild ride; the ecstasy of deploying enterprise-grade gear for the borderline absurd prices that the Edge and Unifi lines enable is all to often ruined by the agony of buggy firmware, features that were promised on GA releases that are still not implemented 2 years later, and questionable business decisions regarding certain product lines. One of the recent frustrations I’ve had was&lt;a href=&quot;https://help.ubnt.com/hc/en-us/articles/360011480554-UniFi-Protect-FAQ#5&quot;&gt;being forced into buying a CloudKey+&lt;/a&gt; in order to run a fully updated version of Unifi Protect, after years of fully self-hosting all my stuff.&lt;/p&gt;

&lt;p&gt;While the bugs that I encountered since the 1st gen. CloudKey days seem to have been fixed, the problems caused by having a physical appliance running the controllers still presents problems regarding backups and service availability in case of a hardware-related issue. While all controllers now have an autobackup feature, the backup files are still hosted on the appliance; this really isn’t a backup in any meaningful sense of the word.&lt;/p&gt;

&lt;p&gt;If you want any sort of safety at all, you need to get those files off the appliance. ‌‌‌‌Luckily, the CloudKey is basically just a fancy ARM64 computer with a custom image of Debian on it, and it is still fairly extensible, so there are plenty of ways to pull the autobackup files off of the device.&lt;/p&gt;

&lt;p&gt;Since the autobackup file retention is managed from within the Unifi controller, all we really need to do is keep an updated copy of those files somewhere else, so I instinctively tried to run an RSYNC over SSH on the device. RSYNC failed, as the service isn’t installed by default on the Cloudkey, but installing this service is as easy as on any other linux device, as the regular Debian Stretch repos were not removed from the appliance. Get root SSH access and run the following commands:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;apt-get update &amp;amp;&amp;amp; apt-get install rsync&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;From there, you’ll need to configure the SSH access via password-less authentication on the CloudKey to enable rsync to do it’s job.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;cd /root&lt;br /&gt;
mkdir .ssh &amp;amp;&amp;amp; chmod 755 ./.ssh&lt;br /&gt;
touch ./.ssh/authorized_keys &amp;amp;&amp;amp; chmod 644 ./.ssh/authorized_keys&lt;br /&gt;
service sshd restart&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;On the machine that will be fetching the backup files (in my case, a FreeNAS box), copy your public key to allow password-less access:  &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;ssh-copy-id root@INSERT_CLOUDKEY_IP&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can now pull backups in from another machine to grab the backups. &lt;a href=&quot;https://www.ixsystems.com/documentation/freenas/11.2/tasks.html?highlight=rsync#rsync-tasks&quot;&gt;FreeNAS has a GUI utility to&lt;/a&gt; help  you build RSYNC jobs, but a cron job would work just as well. The paths for the auto-backup folders are the following:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Unifi:&lt;/strong&gt; /srv/unifi/data/backup/autobackup/&lt;br /&gt;
&lt;strong&gt;Unifi Access:&lt;/strong&gt; /srv/unifi-access/workspace/backup/&lt;br /&gt;
&lt;strong&gt;Unifi Protect (configuration)&lt;/strong&gt;: /etc/unifi-protect/backups/&lt;br /&gt;
&lt;strong&gt;Unifi Protect (video files):&lt;/strong&gt; /srv/unifi-protect/video/&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;These paths only backup the configurations. Seeing that a lot of the problems I’ve had in the past with the Unifi controller was related to the MongoDB backend, I decided that it was probably wiser not to try pulling files from a live database. If the Unifi service was stopped, I don’t see why you couldn’t copy the entire application folder, logs, database and all.&lt;/p&gt;</content><author><name></name></author><category term="unifi" /><category term="ubiquiti" /><category term="rsync" /><category term="cloudkey" /><category term="backup" /><summary type="html">Working with Ubiquiti gear is a wild ride; the ecstasy of deploying enterprise-grade gear for the borderline absurd prices that the Edge and Unifi lines enable is all to often ruined by the agony of buggy firmware, features that were promised on GA releases that are still not implemented 2 years later, and questionable business decisions regarding certain product lines. One of the recent frustrations I’ve had wasbeing forced into buying a CloudKey+ in order to run a fully updated version of Unifi Protect, after years of fully self-hosting all my stuff.</summary></entry><entry><title type="html">Standard TOTP 2nd Factor Authentication (2FA) on AzureAD and Office 365</title><link href="https://maximerousseau.com/standard-totp-2nd-factor-authentication-2fa-on-azuread-and-office-365/" rel="alternate" type="text/html" title="Standard TOTP 2nd Factor Authentication (2FA) on AzureAD and Office 365" /><published>2019-04-07T02:59:37+02:00</published><updated>2019-04-07T02:59:37+02:00</updated><id>https://maximerousseau.com/standard-totp-2nd-factor-authentication-2fa-on-azuread-and-office-365</id><content type="html" xml:base="https://maximerousseau.com/standard-totp-2nd-factor-authentication-2fa-on-azuread-and-office-365/">&lt;p&gt;I recently migrated from Google Apps to Office 365 for my personal emails, and seeing that I wanted to more or less replicate exactly what I had with Google, on the elements on my migration checklist was setting up 2FA.&lt;/p&gt;

&lt;p&gt;Sadly, 2FA is another place where Microsoft tried to reinvent the wheel and put out an Authenticator app of their own, completely disregarding the fact that standard TOTP works perfectly fine, totally secure, and familiar to anybody who gives half a hoot about security.  &lt;/p&gt;

&lt;p&gt;Seeing this, I went scouring through the internet to find an alternative way of doing 2FA, hopefully through FIDO/FIDO2, but sadly this is not yet supported. I did land however on the &lt;a href=&quot;https://support.yubico.com/support/solutions/articles/15000016486-using-yubikeys-with-azure-mfa#Uploading_OATH_Tokens42gbwp&quot;&gt;Yubikey support docs regarding 2FA on Office 365 and AzureAD&lt;/a&gt;, which mentionned the possibility of generating standard TOTP. The docs in question show multiple 2FA options checked, and a user-facing option to “configure app without notifications”.&lt;/p&gt;

&lt;figure class=&quot;kg-card kg-image-card kg-card-hascaption&quot;&gt;&lt;img src=&quot;/content/images/2019/04/Lf6QPMAB80FyvD2XFitRiFT7FvU4NJw4ew.png&quot; class=&quot;kg-image&quot; /&gt;&lt;figcaption&gt;Admin-facing 2FA configuration.&lt;/figcaption&gt;&lt;/figure&gt;
&lt;figure class=&quot;kg-card kg-image-card kg-card-hascaption&quot;&gt;&lt;img src=&quot;/content/images/2019/04/O0871n5RTCnqGBDM3B5fZ1rURt0CwVY5yA-1.png&quot; class=&quot;kg-image&quot; /&gt;&lt;figcaption&gt;User-facing 2FA configuration procedure. &lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Things aren’t exactly like this anymore, probably an attempt by Microsoft to steer users to their own app.&lt;/p&gt;

&lt;p&gt;To get the standard TOP, you HAVE to uncheck all other options; the Microsoft OTP app and standard OTP simply cannot coexist. Here is how my Azure 2FA configuration is setup, available in the 365 admin center in Users -&amp;gt; Active Users -&amp;gt; More -&amp;gt; Multifactor Authentication setup -&amp;gt; Service Settings.&lt;/p&gt;

&lt;figure class=&quot;kg-card kg-image-card&quot;&gt;&lt;img src=&quot;/content/images/2019/04/Screen-Shot-2019-04-06-at-10.23.32-PM.png&quot; class=&quot;kg-image&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;Special care with this configuration is to be taken if this method is used since you have no failover in case your OTP info is not available. If I’m honest, phone-based 2FA is not something I’m too keen on activating anyways, considering the amount of hack attemps that I’ve seen, in the bitcoin sphere specifically. On iOS, OTP auth allows you to export the OTP seed, which I have backed up physically, and configured on more than one device. That seems like a much better way of doing things.&lt;/p&gt;

&lt;p&gt;More advanced plans of Azure AD provide more flexiblity for third-party MFA providers, but I haven’t tested it yet. Passwordless is supposedly available only with Azure AD Premium subscriptions, and at 5$ a month per user, pricing seems a bit steep. In the meantime, you can still use &lt;a href=&quot;https://www.yubico.com/products/services-software/download/yubico-authenticator/&quot;&gt;Yubico’s excellent OTP app&lt;/a&gt; and one of their keys if you want a hardware element integrated to you login routines.&lt;/p&gt;</content><author><name></name></author><category term="microsoft" /><category term="windows" /><category term="otp" /><category term="azureus" /><category term="active-directory" /><category term="yubico" /><category term="yubikey" /><category term="ad" /><summary type="html">I recently migrated from Google Apps to Office 365 for my personal emails, and seeing that I wanted to more or less replicate exactly what I had with Google, on the elements on my migration checklist was setting up 2FA. Sadly, 2FA is another place where Microsoft tried to reinvent the wheel and put out an Authenticator app of their own, completely disregarding the fact that standard TOTP works perfectly fine, totally secure, and familiar to anybody who gives half a hoot about security.  </summary></entry><entry><title type="html">Quitter la plantation</title><link href="https://maximerousseau.com/quitter-la-plantation/" rel="alternate" type="text/html" title="Quitter la plantation" /><published>2019-03-12T02:32:14+01:00</published><updated>2019-03-12T02:32:14+01:00</updated><id>https://maximerousseau.com/quitter-la-plantation</id><content type="html" xml:base="https://maximerousseau.com/quitter-la-plantation/">&lt;p&gt;Aujourd’hui, Catherine Fournier a quitté la politique pour les bonnes raisons, et va probablement en payer le prix d’une défaite électorale cuisante aux prochaines élections provincials, en plus de se faire allégrement invectiver jusqu’à la fin de son mandat.&lt;/p&gt;

&lt;p&gt;Quand on lit les commentaires sur le &lt;a href=&quot;https://twitter.com/CathFournierQc/status/1105065469344706563&quot;&gt;statut Twitter qui annonce son départ du PQ&lt;/a&gt; ou le &lt;a href=&quot;https://twitter.com/CathFournierQc/status/1105168906803662849&quot;&gt;tweet subséquent&lt;/a&gt;, on comprend rapidement pourquoi elle quitte. La tempête de boomer qui l’accuse de trahison donne entièrement raison à sa démarche, qui pourtant a été présentée d’une manière qui n’aurait pas pu être plus prudente et respectueuse. Son intention est facile à comprendre: elle quitte pour explorer les avenues possible pour l’accession à la souverainté, sans les restrictions associées à une affiliation partisane. Le mouvement souverainiste qui est bien connu pour la décapitation sommaire de ses chefs et des luttes de pouvoir internes qui semblent franchement désagréables; peut-on vraiment lui reprocher de vouloir opérer hors de cet environnement?&lt;/p&gt;

&lt;p&gt;Tous les babounes de boomer sont prévisibles quand ont connait un tant soit peu la culture politique du Québec. &lt;em&gt;Extra Ecclesiam nulla salus&lt;/em&gt;: la politique d’un peuple soumis, incapable d’imaginer quoi que ce soit hors des institutions qui lui est familier, préférant le connu de l’étreinte oppressive (selon l’historiographie officielle, de l’Église, mais aussi et surtout de l’État et de ses agents) aux possibilités qu’offre la liberté de toute contraint de nature politique.  &lt;/p&gt;

&lt;p&gt;Si les souverainistes n’étaient pas trop occupés à rendre publique sur Twitter leur syndrome de Stockholm pour un parti qui ne leur a rien livré depuis des dizaines d’années et dont la fenêtre d’opportunité se ferme à un rythme effarant, ils aurait pu faire une analyse sobre de la situation. Premièrement, Catherine n’est évidamment pas moins souveraineté qu’avant, et rien n’indique qu’elle sera un obstacle au PQ, que ce soit en chambre ou dans ses démarches de communication. Dans son discours et dans ses réponses aux questions lors de sa présentation d’aujourd’hui, même le pire des cyniques ne pourrait entrevoir une volonté de s’engager dans un messianisme souverainiste à la sauce Aussant et de faire directement compétition au PQ. Des putschs comme ça, ça s’organise en groupe. Deuxièmement, elle ne le fait clairement pas pour l’avancement de sa propre carrière politique. Pour les raisons de culture politique que j’ai soulevées ci-haut, elle vient à tout fin pratique de s’assurer une défaite au prochain cycle, alors qu’elle aurait pu facilement faire comme la majorité des péquistes seniors et se présenter à l’AssNat pour mandat par-dessus mandat, impuissant sinon que pour faire des shows de boucane, seuls mécanismes par lesquels les partis sans pouvoir peuvent se convaincre qu’ils sont pertinents.&lt;/p&gt;

&lt;p&gt;En politique, l’apostasie est pire que la non-croyance. La perte d’une des wonderchild du PQ, la plus jeune femme élue à l’Assemblée Nationale, un symbole de renouveau dans un parti moribond où l’on compte plus de nez de gin que de femmes dans le fleur de l’âge, c’est une grosse perte. Quand en plus elle ÔSE critiquer le parti qui, justement, allait ENFIN amorcer LA transformation interne qui cette fois-ci serait définitivement la bonne et allait assurément reconquérir les Québécois, s’en est trop. J’espère que ma dérision de la réponse du PQ transpire malgré ma plume médiocre.&lt;/p&gt;

&lt;p&gt;Possiblement que je projette ma propre évolution politique, mais je pense que nous voyons les conséquences d’une prise de conscience fondamentale sur la nature de la politique chez Catherine. Si elle ne l’avait pas compris avant de quitter le PQ, les prochaines années en tant que &lt;em&gt;persona non grata&lt;/em&gt; du mouvement indépendantiste l’amèneront assurément au constat suivant: par définition, la politique n’est PAS un milieux propice à l’échange d’idées. Il n’y a aucune place pour la dissension dans la politique institutionnalisée; on doit toujours fléchir le genou à quelqu’un, si ce n’est pas à un parti, c’est à l’électeur lambda… je vous épargne ma description de ce dernier. Je ne saurais dire quel est le pire.&lt;/p&gt;

&lt;p&gt;Pour s’émanciper “en tant que peuple” comme le prétendent les nationalistes, se séparer du Canada est insuffisant; il faut aussi s’émanciper de la politique elle-même. Catherine,&lt;a href=&quot;https://www.youtube.com/watch?v=qc_8jcHYBis&amp;amp;t=1m4s&quot;&gt;comme Kanye&lt;/a&gt;, a quitté la plantation; elle en payera le prix, mais je ne peux qu’applaudir son geste.&lt;/p&gt;</content><author><name></name></author><category term="politique" /><category term="parti-quebecois" /><category term="quebec" /><category term="catherine-fournier" /><category term="independance" /><category term="souverainte" /><summary type="html">Aujourd’hui, Catherine Fournier a quitté la politique pour les bonnes raisons, et va probablement en payer le prix d’une défaite électorale cuisante aux prochaines élections provincials, en plus de se faire allégrement invectiver jusqu’à la fin de son mandat. Quand on lit les commentaires sur le statut Twitter qui annonce son départ du PQ ou le tweet subséquent, on comprend rapidement pourquoi elle quitte. La tempête de boomer qui l’accuse de trahison donne entièrement raison à sa démarche, qui pourtant a été présentée d’une manière qui n’aurait pas pu être plus prudente et respectueuse. Son intention est facile à comprendre: elle quitte pour explorer les avenues possible pour l’accession à la souverainté, sans les restrictions associées à une affiliation partisane. Le mouvement souverainiste qui est bien connu pour la décapitation sommaire de ses chefs et des luttes de pouvoir internes qui semblent franchement désagréables; peut-on vraiment lui reprocher de vouloir opérer hors de cet environnement?</summary></entry><entry><title type="html">Fixing a Bricked Unifi Security Gateway (USG)</title><link href="https://maximerousseau.com/fixing-a-bricked-unifi-security-gateway-usg/" rel="alternate" type="text/html" title="Fixing a Bricked Unifi Security Gateway (USG)" /><published>2018-09-13T01:37:17+02:00</published><updated>2018-09-13T01:37:17+02:00</updated><id>https://maximerousseau.com/fixing-a-bricked-unifi-security-gateway-usg</id><content type="html" xml:base="https://maximerousseau.com/fixing-a-bricked-unifi-security-gateway-usg/">&lt;p&gt;I thought I was being real smart when I hooked up an eBay-bought 802.11af-compliant 12v POE extractor to my Unifi Security Gateway. The whole idea was to get rid of all the power-warts and AC-DC conversion devices hanging off my UPS to make the makeshift rack in my parent’s basement cleaner, in addition to making my router power-resettable through the Unifi control panel.&lt;/p&gt;

&lt;p&gt;This genius scheme worked fine for the better part of a year, before this summer’s grueling heat took it’s toll on the extractor. Naturally, this all took place while I was thousands of kilometers away; luckily, power resets and cooling off the adaptor worked for a while, but at a certain point it gave up the ghost entirely, still drawing current from the switch but making a horrible pulsing sound.&lt;/p&gt;

&lt;p&gt;The erratic power delivery was not very well received by my USG, which decided that it would no longer boot correctly, or really boot at all for that matter. The behaviour of the device was as follows:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Interface lights would light up as per normal during the boot sequence&lt;/li&gt;
  &lt;li&gt;Status LED would NOT light up at all, not even giving the usual boot-time flashing white&lt;/li&gt;
  &lt;li&gt;As one would expect, the device would not ping or connect over SSH. A Wireshark scan also showed that it didn’t seem to set the LAN interface IP either to it’s last known provisionned value, or default value.&lt;/li&gt;
  &lt;li&gt;Any form of reset, including a 30-30-30 reset would do absolutely nothing.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Browsing the UBNT Community forums showed that this was most likely a corrupt USB drive. The firmware on these devices is stored on a 4GB USB stick plugged in internally, as pictured here.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/content/images/2018/09/IMG_2439.JPG&quot; alt=&quot;IMG_2439&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Luckily, I had a fresh, out-of-box sample USG with the board entirely out that I had bought to mock up in CAD for some bracket work I wanted to get done. I copied the fresh flash drive to my Mac using DD, imaged it back to the defective USB drive, plugged everything back in and got things working again. After about of minute of what is probably first-use initialisation on post-recovery power-on, the white light status light started flashing, and within normal booting time switch to solid, at which time the device had set it’s default IP address on the LAN interface and was accessible through it’s web UI.&lt;/p&gt;

&lt;p&gt;The USB drive has the following partition layout: 
&lt;img src=&quot;/content/images/2018/09/Unifi-USB-Drive.png&quot; alt=&quot;Unifi-USB-Drive&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I’m honestly surprised that it was decided to use a USB drive to hold the software. I’ve had tremendously bad luck with putting bootable software on USB drives; all my BSD-based appliances ate drives at a rate where I quickly found myself using 3 or 4 drive mirror setups to make sure that drive failure wouldn’t break my stuff. However, the advantage is that I didn’t have to break out a serial cable for some complicated console-based restore process, which is fine by me since just FINDING my serial adaptor would have been much longer than DD’ing a 4GB flash drive was.&lt;/p&gt;

&lt;p&gt;Recognizing the uncanny way in which I somehow dodged Murphy’s Law by having a fresh spare on hand, I decided to thank the IT gods by making the image available here. Version info on the restore device told me this is firmware v4.3.33, the older-style firmware with less configurtion options available to an un-adopted device.&lt;/p&gt;

&lt;p&gt;You can download the image &lt;a href=&quot;http://https://drive.google.com/open?id=1B4NQOPfr73h20nbkWwLqWpxrGINYdMLG&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Checksum is as follows:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;MD5 (UniFiSecurityGateway.ER-e120.v4.3.33.4936086.161203.2031.img) = 83941494d4f9f9fb906e19b8ecf68696&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can DD this image directly without specifying any block size, which worked just fine for me.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;IMPORTANT NOTE ON COMPATIBILITY&lt;/strong&gt;: I am unaware of any potential incompatiblities with hardware or low-level firmware between the software I uploaded and whatever your USG might be running. What I know is that there did not appear to be incompatibility issues going from firmware 4.4.22 back down to 4.3.33. Use at your own risk. Both units used a PCB that was marked “Copyright 2014”, despite being purchased years from one another.&lt;/p&gt;

&lt;p&gt;Bottom line: Power matters. If you want to centralize power, get a decent rackmount power supply in the appropriate voltages, and if control is what you want, get a relay setup.&lt;/p&gt;</content><author><name></name></author><category term="unifi" /><category term="security" /><category term="gateway" /><category term="networking" /><category term="repair" /><summary type="html">I thought I was being real smart when I hooked up an eBay-bought 802.11af-compliant 12v POE extractor to my Unifi Security Gateway. The whole idea was to get rid of all the power-warts and AC-DC conversion devices hanging off my UPS to make the makeshift rack in my parent’s basement cleaner, in addition to making my router power-resettable through the Unifi control panel.</summary></entry><entry><title type="html">FreeNAS + RancherOS, my NAS Docker Stack</title><link href="https://maximerousseau.com/freenas-rancheros-my-nas-docker-stack/" rel="alternate" type="text/html" title="FreeNAS + RancherOS, my NAS Docker Stack" /><published>2018-04-09T01:14:41+02:00</published><updated>2018-04-09T01:14:41+02:00</updated><id>https://maximerousseau.com/freenas-rancheros-my-nas-docker-stack</id><content type="html" xml:base="https://maximerousseau.com/freenas-rancheros-my-nas-docker-stack/">&lt;p&gt;I’ve been a FreeNAS user since the 8.x days, having decided to ditch a self-hosted file server based off Fedora with a pretty basic MDADM + ext3fs storage setup. Running on commodity hardware, the prior setup was fine, but little other than an extensible NAS that was somewhat of a hassle to manage and keep updated. FreeNAS and it’s plugins jails promised to do most of what I was doing beforehand, in an appliance format that is much easier to maintain.&lt;/p&gt;

&lt;p&gt;FreeNAS Corral, aka FreeNAS 10, was supposed to bring native Docker support to the product with the help of a built-in Bhyve + boot2docker setup built right into the new UI. While jails are technically as flexible as FreeBSD and the &lt;a href=&quot;https://www.freebsd.org/ports/&quot;&gt;ports library&lt;/a&gt; are, plugins-jails are a bit more complicated and you are generally dependant on a maintainer for updates. Case in point: as of my writing of this, the PBI jail for Owncloud is stuck at 9.1.2, dating back to November of 2016. To compare, my docker instance of Owncloud is currently on 10.0.7.&lt;/p&gt;

&lt;p&gt;Plugin jails have been helpful for me and countless others, but it’s time to admit that Docker is just better at doing what the original system set out to do. Here’s what I’ve done to transition to Docker on FreeNAS.&lt;/p&gt;

&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;/h2&gt;

&lt;p&gt;Setup is &lt;a href=&quot;http://doc.freenas.org/11/vms.html#docker-rancher-vm&quot;&gt;pretty straight-forward and well-documented in the FreeNAS docs&lt;/a&gt;, however it is described in a very procedural fashion which doesn’t really give you any insight of what is being done behind the scene. This makes it very confusing when things break; I was pulling my hair out for hours because of a &lt;a href=&quot;https://forums.freenas.org/index.php?threads/freenas-11-1-rancher-server-installation-failed.59898/&quot;&gt;corrupt download not completing&lt;/a&gt;. For thoroughness’ sake, here is an overview of what following the steps in the guide accomplishes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Creates a Bhyve VM&lt;/li&gt;
  &lt;li&gt;Creates a RAW drive image that will be used for storage&lt;/li&gt;
  &lt;li&gt;Downloads the RancherOS image and flashes it (dd?) to your drive image to make it bootable&lt;/li&gt;
  &lt;li&gt;Creates a basic RancherOS configuration file from the options entered in the additional options entered in the storage device menu.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you can’t get a serial console or can’t get the machine to boot properly, remember this order and use it to diagnose. This should be obvious, but the recommendations regard the provisioning of CPU and RAM resources are just that; depending on what you intend on running within your Docker VM, assign system ressources as necessary. In my case, assigning just one VCPU held back &lt;a href=&quot;https://hub.docker.com/r/ruimarinho/bitcoin-core/&quot;&gt;my bitcoin node&lt;/a&gt; from properly syncing. Adding another one fixed the problem and made all the services running in containers visibly more snappy.&lt;/p&gt;

&lt;p&gt;A word of warning on giving the VM more system ressources: I had problems giving the machine more than 2 virtual CPUs; the machine seems to want to boot up, with Bhyve init stuff showing up on the serial console, but the OS stalled shortly before all the services could go up.&lt;/p&gt;

&lt;h2 id=&quot;storage&quot;&gt;Storage&lt;/h2&gt;

&lt;p&gt;The modularity of Docker is what makes its strength, but in order to be truly useful, if must be built on a stack that is itself just as modular. For example, in continuity with the spirit of containerizing, I aught to be able to be able to snapshot and replicate individual containers to back them up locally or offsite. Storing everything on the raw disk image just isn’t compatible with that vision of things.&lt;/p&gt;

&lt;p&gt;You could store everything on ZFS vdevs through additional VM volume assignments, but then you &lt;a href=&quot;http://jrs-s.net/2016/06/16/psa-snapshots-are-better-than-zvols/&quot;&gt;lose the ability to snapshot under certain conditions&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Rancher has &lt;a href=&quot;https://github.com/rancher/convoy&quot;&gt;convoy&lt;/a&gt; that can make docker volumes persistent, and store them on a variety of backends, but the additional layer of docker-style volumes doesn’t really need to be there.&lt;/p&gt;

&lt;p&gt;I opted instead to use &lt;a href=&quot;https://hub.docker.com/r/d3fk/nfs-client/&quot;&gt;nfs-client&lt;/a&gt; and bind-mounts in my containers to my install of FreeNAS, &lt;a href=&quot;https://forums.freenas.org/index.php?threads/howto-freenas-11-rancheros-docker-and-portainer.54595/&quot;&gt;with the method detailed here&lt;/a&gt;. I modified the steps to fit my application slightly. First of all, I elected to created a child dataset for every container, in order to be able to snapshot and replicate as mentionned above. Secondly, I had to make seperate NFS shares for each container, since NFS will not traverse nested datasets as one would expect. With this larger amount of shares, listing the NFS mounts was done directly in my cloud-config.yml file, as so.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/content/images/2018/03/nfsmounts.png&quot; alt=&quot;nfsmounts&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You might be tempted to use SMB, which is also supported by RancherOS; this isn’t a good idea if you plan on running any container that includes Apache because it is heavily reliant on UNIX-style permissions to function properly, and that just won’t translate over SMB.&lt;/p&gt;

&lt;h2 id=&quot;networking-and-security&quot;&gt;Networking and security&lt;/h2&gt;

&lt;p&gt;Using NFS as a link between your Docker VM and your ZFS storage introduces security problems caused by the ways that RancherOS and NFS works. First of all, RancherOS runs all it’s Docker processes as root along with the NFS client; secondly, NFSv3 uses client-side info on the user accessing the share to determine if it has the permission to access the share or not. All this means that you will have to disable root squashing for things to work; I went about this by adding root/wheel to the maproot user/group fields in the advanced settings of my NFS shares.&lt;/p&gt;

&lt;p&gt;This is obviously horrible security, because any rogue machine can now access your shares as root if your client ACLs are too loose. The way around this is making sure that the network access to the address that the NFS service is bound to is impossible for everything but your Docker VM. The advanced settings of the individual NFS shares provide a client allow list, which you should use to whitelist ONLY your VM with its IP.&lt;/p&gt;

&lt;p&gt;The ideally you’d also want to use a dedicated network bridge to pass the traffic off between your storage and the VM. The problem is that the web UI does not show you bridge interfaces when offering you the options for VM NIC mapping; my workaround was to plug in a dead-end VLAN in an unused interface on my server, and have all the Docker-related traffic come in through this interface.&lt;/p&gt;

&lt;h3 id=&quot;a-note-on-pre-111-u2&quot;&gt;A note on pre-11.1-U2&lt;/h3&gt;

&lt;p&gt;Going from one reboot to the next in the 11.1 series of releases (not U2 though), I’ve gotten weird networking issues where the networking interface(s) used by the RancherOS instance would not bind to the correct NIC, making connection to the NAS-provided storage or to the rest of the network impossible. Digging around in the bug tracker, it seems that &lt;a href=&quot;https://redmine.ixsystems.com/issues/27122&quot;&gt;the way VM NICs are bridge may be sub-optimal&lt;/a&gt;. If you are experiencing weird issues after configuring your networking in the RancherOS VM, check your network configuration with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ifconfig&lt;/code&gt;. You should get something like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/content/images/2018/03/freenasifbridge.png&quot; alt=&quot;freenasifbridge&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The TAP interface is the host-side NIC that gives your VM network access. In my setup, the VLAN interface is the parent interface that can be found in the ==Devices/NIC== menu of the VM. If the binding is properly made, the bridge should group those two interfaces together. If you have many TAP interfaces and bridges that you can’t make sense of, upgrade to 11.1-U2 and reboot, things should clean up.&lt;/p&gt;

&lt;h2 id=&quot;managing-docker&quot;&gt;Managing Docker&lt;/h2&gt;

&lt;p&gt;RancherOS kind of suggests that using Rancher to manage your containers might be a good idea, but it seemed a bit clumsy and overkill for a single host setup. I instead opted for &lt;a href=&quot;https://portainer.io&quot;&gt;Portainer&lt;/a&gt;, which I was somewhat already familiar with and is much less intimidating to use and deploy, seeing that it’s really just a nice front end for the docker commands you you know and love.&lt;/p&gt;

&lt;p&gt;At the RancherOS command line, run the installation one-liner on the Portainer website, subsituting bind mounts for the volume if necessary, and adding the restart policy if you so desire. Provided the restart-policy is ok, Portainer will start up with RancherOS bootup.&lt;/p&gt;

&lt;h2 id=&quot;monitoring&quot;&gt;Monitoring&lt;/h2&gt;

&lt;p&gt;I’ve been building a monitoring system on the &lt;a href=&quot;https://www.influxdata.com/blog/introduction-to-influxdatas-influxdb-and-tick-stack/&quot;&gt;TICK stack&lt;/a&gt; for my home setup, and as it turns out Docker monitoring is quite simple. &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/inputs/docker&quot;&gt;Telegraf has a plugin specifically for docker monitoring&lt;/a&gt;, just spin up a Telegraf instance with the docker.sock endpoint mapped through, configure the config file, and you’re good to go.&lt;/p&gt;

&lt;p&gt;With the &lt;a href=&quot;https://github.com/influxdata/influxdb/blob/master/services/graphite/README.md&quot;&gt;intergrated Graphite listener&lt;/a&gt; enabled and the ports open, you can also configure FreeNAS to output its metrics to Influx aswell… your Influx instance can of course be within docker if you so desire.&lt;/p&gt;

&lt;p&gt;If you want better insights into your NAS’ performance and don’t have a monitoring setup built up, this “FreeNAS monitoring on itself” is not a bad choice, particularly if your FreeNAS server is your only machine.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;If you run anything critical, you might want to run a dedicated docker host. However, if you have spare CPU cycles and memory (although with ZFS, it could be argued that there is no such thing as “spare memory”), why not? Docker absolutely seems like a viable replacement for plugin-jails, and if your FreeNAS box is a backup repo for databases hosted elsewhere, you can now run replication services in containers instead pushing dumps.&lt;/p&gt;

&lt;p&gt;I just wish that Docker was native to the base OS, and that the Bhyve + RancherOS + NFS stack could be avoided. Limits on provisionning hardware are also a bit problematic, but it is what it is. There’s a Docker container for everything… have at it!&lt;/p&gt;</content><author><name></name></author><summary type="html">I’ve been a FreeNAS user since the 8.x days, having decided to ditch a self-hosted file server based off Fedora with a pretty basic MDADM + ext3fs storage setup. Running on commodity hardware, the prior setup was fine, but little other than an extensible NAS that was somewhat of a hassle to manage and keep updated. FreeNAS and it’s plugins jails promised to do most of what I was doing beforehand, in an appliance format that is much easier to maintain.</summary></entry><entry><title type="html">Easy Fix for Dead Unifi AC-Lite Access Points</title><link href="https://maximerousseau.com/easy-fix-for-dead-unifi-ac-lite-access-points/" rel="alternate" type="text/html" title="Easy Fix for Dead Unifi AC-Lite Access Points" /><published>2017-11-07T01:21:09+01:00</published><updated>2017-11-07T01:21:09+01:00</updated><id>https://maximerousseau.com/easy-fix-for-dead-unifi-ac-lite-access-points</id><content type="html" xml:base="https://maximerousseau.com/easy-fix-for-dead-unifi-ac-lite-access-points/">&lt;p&gt;I’ve been deploying Ubiquiti’s Unifi gear for a while and I absolutely love it. While the development cycle of firmware and software is somewhat uneven, the products are great, inexpensive, run off a self-hosted management portal and don’t have any licensing costs attached to them.&lt;/p&gt;

&lt;p&gt;Except for firmware-induced hiccups, I haven’t heard anything more than anecdotal evidence of systematic failure or any product in their line. One dealer told me of an issue with early SKU 24 port 150W switches’ POE modules, but that’s about it. I personally have had my first failure on ANY Unifi product this week when a UAP-AC-LITE shit the bed, failing to power-on with any POE source. Other symptoms included flashing light on the passive power injector, and a short flash of the white LED if the reset button was held in with the power-injector connected.&lt;/p&gt;

&lt;p&gt;Turns out the problem has already been documented, and comes from a TVS diode in the power circuit that blows up; &lt;a href=&quot;https://www.ifixit.com/Guide/Ubiquiti+UniFi+AP+AC+Lite+TVS+Diode+Replacement/73360&quot;&gt;a kind fellow on iFixit has already documented a fix&lt;/a&gt;. Sure enough, this is exactly how mine broke.&lt;/p&gt;

&lt;p&gt;The guide says that the diode is there to protect other components, but it’s unclear if the failure is due to a cheap component or if it is provoked by some particular incident. In my setup, the AP was powered by a Unifi US-8-150W switch, which itself was connected to a high quality UPS; the likelyhood of a power-related incident is low. There has been an acknowledged bug in firmware in the past that has made certain 24V devices get 48V during reboots, but this problem is long since fixed, or at least this was my impression. &lt;a href=&quot;https://community.ubnt.com/t5/UniFi-Routing-Switching/UniFi-Switch-24v-Passive-PoE/m-p/2103593/highlight/true#M61755&quot;&gt;This post&lt;/a&gt; seems to indicate that there is no fix. Having missed the &lt;a href=&quot;https://community.ubnt.com/t5/UniFi-Wireless/Warning-UAP-AC-LITE-and-UAP-AC-LR-with-UniFi-Switch-on-PoE/m-p/1771809#U1771809&quot;&gt;original announcement and the giveaway of 802.3af adapters&lt;/a&gt;, I’ve missed the boat.&lt;/p&gt;

&lt;p&gt;I’ve reached out to UBNT for warranty support, and they don’t seem to have any intention to warranty this kind of fault, or to admit that the diode blowing up is the expected mode of failure.&lt;/p&gt;

&lt;p&gt;This might be good news for deal hunters with connections to recyclers. Considering that the AP is the lowest-end AC offering in the Unifi lineup and that there are quite possibly tens of thousands of affected units in the wild, a spool of diodes for a few bucks and a cheap broken APs might be a terrific score for somebody intending to use the APs without a POE switch, or with a seperated 802.3af adaptor. The AC-Lite was a terrific deal at it’s inital MSRP, and remains one of the most competitive offerings even in it’s later 48V, 802.3af compliant version priced the same at around 100$.&lt;/p&gt;</content><author><name></name></author><category term="ubnt" /><category term="ubiquiti" /><category term="networking" /><category term="no-power" /><category term="ac-lite" /><category term="repair" /><summary type="html">I’ve been deploying Ubiquiti’s Unifi gear for a while and I absolutely love it. While the development cycle of firmware and software is somewhat uneven, the products are great, inexpensive, run off a self-hosted management portal and don’t have any licensing costs attached to them.</summary></entry><entry><title type="html">Rona, le fisc et la dérive de fonction - Prince Arthur Herald</title><link href="https://maximerousseau.com/rona-le-fisc-et-le-mission-creep/" rel="alternate" type="text/html" title="Rona, le fisc et la dérive de fonction - Prince Arthur Herald" /><published>2017-08-18T02:46:16+02:00</published><updated>2017-08-18T02:46:16+02:00</updated><id>https://maximerousseau.com/rona-le-fisc-et-le-mission-creep</id><content type="html" xml:base="https://maximerousseau.com/rona-le-fisc-et-le-mission-creep/">&lt;blockquote&gt;
  &lt;p&gt;Bien peu de gens y verrons un problème à ce que Rona soit défait en cour. La défenderesse est une compagnie, un monstre sans visage ayant comme seule motivation le profit; dans un cas traitant d’évasion fiscale, son opposition est suspecte au mieux. Pourtant, l’enjeux me semble plus large: devrais-t-on imposer à grand coûts le travail d’être un délateur fiscal? Au-delà de l’information habituellement contenue dans le rapport d’impôt, quelle information le fisc peut-il nous exiger de remettre? Si un de mes proches est sujet d’un audit, quelle sorte de “renseignements ou documents” serais-je contraint de fournir? Combien d’heures non-rémunérés m’obligeront-ils à travailler pour faire le recensement de ces renseignements? Voulons-nous vraiment d’une société de snitch?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;http://princearthurherald.com/fr/affaires-2/rona-le-fisc-et-la-derive-de-fonction-maxime-rousseau&quot;&gt;Lire l’article sur le site du Prince Arthur Herald&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="prince-arthur-herald" /><category term="rona" /><category term="fisc" /><category term="revenu-canada" /><category term="vie-privee" /><summary type="html">Bien peu de gens y verrons un problème à ce que Rona soit défait en cour. La défenderesse est une compagnie, un monstre sans visage ayant comme seule motivation le profit; dans un cas traitant d’évasion fiscale, son opposition est suspecte au mieux. Pourtant, l’enjeux me semble plus large: devrais-t-on imposer à grand coûts le travail d’être un délateur fiscal? Au-delà de l’information habituellement contenue dans le rapport d’impôt, quelle information le fisc peut-il nous exiger de remettre? Si un de mes proches est sujet d’un audit, quelle sorte de “renseignements ou documents” serais-je contraint de fournir? Combien d’heures non-rémunérés m’obligeront-ils à travailler pour faire le recensement de ces renseignements? Voulons-nous vraiment d’une société de snitch?</summary></entry><entry><title type="html">Raid-Proof Your FreeNAS with USBKill</title><link href="https://maximerousseau.com/raid-proof-your-freenas-with-usbkill/" rel="alternate" type="text/html" title="Raid-Proof Your FreeNAS with USBKill" /><published>2017-07-30T19:33:32+02:00</published><updated>2017-07-30T19:33:32+02:00</updated><id>https://maximerousseau.com/raid-proof-your-freenas-with-usbkill</id><content type="html" xml:base="https://maximerousseau.com/raid-proof-your-freenas-with-usbkill/">&lt;p&gt;By virtue of being a very multi-functional appliance in most settings, a FreeNAS machine has the potential to be a very sensible part of your rack. Even if you don’t use jails or VMs to host anything, it’s still a fileserver at the bare minimum, which means it hosts your data. I don’t think I need to emphasize that protecting your data is important. FreeNAS being built on ZFS, the appliance integrates robust encryption from the get-go, but disk encryption alone leaves several attack vectors wide-open.&lt;/p&gt;

&lt;p&gt;The most important of these attack vectors, as tragically highlighted by cases of Ross Ulbricht and Alexandre Cazes (of Silkroad and Alphabay infamy, respectively) is physical security. It’s one of the first mantras of computer security I’ve memorized: “If you’ve got physical control over it, it’s owned.” Good luck getting any data out of an encrypted ZFS dataset on a powered down system, but on a live box? There are ways. By default, you can reset the root password from the console. Even if that’s disabled, advanced enough intruders (read: state actors) have the means of poking and proding until they find a way.&lt;/p&gt;

&lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-9587657333914786&quot; data-ad-slot=&quot;6494385734&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
     (adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Short of &lt;a href=&quot;https://www.youtube.com/watch?v=-bpX8YvNg6Y&quot;&gt;physically detonating your servers&lt;/a&gt; upon detection of intrusion, there is still a way of minimizing the possibility of intrusion by using tools like USBKill.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://github.com/hephaest0s/usbkill&quot;&gt;original USBKill was written by Github user hephaest0s&lt;/a&gt; with the specific case of Ulbricht in mind, and is basically a USB peripheral watchdog that shuts down your machine as soon as it detects a change in connected peripherals. With config file tweaks, you can also run any amount of arbitrary commands and clear swap memory and RAM.&lt;/p&gt;

&lt;h2 id=&quot;adapting-usbkill-to-freenas&quot;&gt;Adapting USBKill to Freenas&lt;/h2&gt;
&lt;p&gt;Since USBKill is comprise of a single file of Python, and officially supports FreeBSD, there were high chances that USBKill would work out of the box with FreeNAS. Unfortunately, FreeNAS does not ship with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lsusb&lt;/code&gt; which is a used by USBKill, so it had to be adapted to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;usbconfig&lt;/code&gt; which does come preinstalled.&lt;/p&gt;

&lt;p&gt;My hacked up fork of USBKill for FreeNAS uses parsed output of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;usbconfig&lt;/code&gt; to monitor USB peripherals in the same manner as originally intended.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Please note that I have not given any attention to the ram/swap clearing fonctionality. It may or may not work with what is already on board a stock FreeNAS install.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can find the &lt;a href=&quot;https://github.com/max302/usbkill/&quot;&gt;full repo on Github here&lt;/a&gt;, but essentially, only the &lt;a href=&quot;https://github.com/max302/usbkill/blob/master/usbkill/usbkill.py&quot;&gt;usbkill.py&lt;/a&gt; file has been modified.&lt;/p&gt;

&lt;p&gt;##Setting up USBKill on Freenas&lt;/p&gt;

&lt;p&gt;Writing to system folders like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/&lt;/code&gt; isn’t supported by FreeNAS, any changes will be wiped out on reboot. In order to add stuff to the base OS, you’ll need add stuff to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/conf/base/etc&lt;/code&gt;. In my experience, everything within this is upgrade-resistant too, although it’s probably a good idea to double-check after major upgrades. Add the necessary files with the following commands:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mkdir /conf/base/etc/usbkill&lt;/code&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cd /conf/base/etc/usbkill&lt;/code&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wget https://raw.githubusercontent.com/max302/usbkill/master/usbkill/usbkill.py&lt;/code&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cd /etc/base/etc/&lt;/code&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wget https://raw.githubusercontent.com/max302/usbkill/master/install/usbkill.ini&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now, we’ll need to have the script start on boot. To do this, we’ll pass multiple commands in a one-liner through the &lt;a href=&quot;https://doc.freenas.org/9.3/freenas_tasks.html#init-shutdown-scripts&quot;&gt;built-in init/shutdown script options&lt;/a&gt;. Just add this line once the files have been put in place:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bash -c 'python /etc/usbkill/usbkill.py &amp;gt; /dev/null 2&amp;gt;&amp;amp;1' &amp;amp; &lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Once you have save the init command, reboot. Then, you can test functionality by looking for the process we have asked to be launched with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ps -aux | bash&lt;/code&gt;. You’ll also get a log at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/var/log/usbkill/usbkill.log&lt;/code&gt; that has timestamps. If the times line up with your last reboot, it’s working.&lt;/p&gt;

&lt;p&gt;You’ll notice that we’re calling on bash, which is an alternate shell on Freenas. This simply makes redirecting output to nul easier; I haven’t had great success with csh.&lt;/p&gt;

&lt;p&gt;Here’s a demo on my own FreeNAS system.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/hej6ycgxWYo&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;pre-kill-commands&quot;&gt;Pre-kill commands&lt;/h2&gt;

&lt;p&gt;Depending on your use case, you might want to run certain pre-kill commands to cause even more grief to whoever is trying to plunder your server. Here are a few ideas:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;On an encrypted volume with no passphrase, or even on a volume with a passphrase, you may want to wipe the master AES key and your password encryption secret. These files can be found at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/data/geli/xxxxxxxx.key&lt;/code&gt;and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/data/pwenc_secret&lt;/code&gt; respectively. Deleting the files outright will work, but replacing the data with something plausible yet non-functional can cause even more confusion.&lt;/li&gt;
  &lt;li&gt;Without completely overwriting your disks, you can also quickly prevent an array from ever remounting by clearing the ZFS metadata. Check &lt;a href=&quot;https://icesquare.com/wordpress/freebsdhow-to-remove-zfs-meta-data/&quot;&gt;this blog post&lt;/a&gt; to learn how to do this.&lt;/li&gt;
  &lt;li&gt;Notify yourself. If you mail alerts are correctly configured throught the FreeNAS GUI, using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mail&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sendmail&lt;/code&gt; to send yourself a notification should be a one line ordeal.&lt;/li&gt;
  &lt;li&gt;Shutdown everything. Since python is accessible, it’s relatively easy to script stuff like IFTTT triggers or basically anything else you can think of. Set your home to lockdown mode, alert friends, mix and empty out your crypto wallets… with a little bit of code, you can do it all.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;##FreeNAS-specific additional considerations&lt;/p&gt;

&lt;p&gt;In addition to the other &lt;a href=&quot;https://maximerousseau.com/home-network-segmentation-nat-loopback-to-vlan-on-ubiquiti-unifi-gear/&quot;&gt;network security measures that I’ve gone through in this post&lt;/a&gt;, there are a couple of other things that you can do to protect your install of FreeNAS.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Disable serial consoles.&lt;/strong&gt; Does anybody actually use these things? They constitute an additional attack vector yet provide little to no actual functionality. Disable all serial ports in BIOS. If you still use serial… I don’t even know what to tell you.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Update and lock down your IPMI.&lt;/strong&gt; IPMI has been show to be a &lt;a href=&quot;https://www.wired.com/2013/07/ipmi/&quot;&gt;serious vulnerability&lt;/a&gt; in the past. Use a seperated VLAN, strong password, non-standard username. This is one of these things that WILL be defeated with physical access, unfortunately. However, most IPMI implementations connect virtual USB mouse and keyboard peripherals once remote consoles are opened; this means USBKill will catch any such attempt at remote administration unless the devices are whitelisted. See the &lt;a href=&quot;https://github.com/max302/usbkill/blob/master/install/usbkill.ini&quot;&gt;usbkill.ini&lt;/a&gt; file for details on how to whitelist peripherals.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If I have forgotten anything, please let me know through email at max @ thisdomain.com&lt;/p&gt;</content><author><name></name></author><category term="freenas" /><category term="usbkill" /><category term="counterforensics" /><category term="it" /><category term="is" /><category term="security" /><category term="zfs" /><summary type="html">By virtue of being a very multi-functional appliance in most settings, a FreeNAS machine has the potential to be a very sensible part of your rack. Even if you don’t use jails or VMs to host anything, it’s still a fileserver at the bare minimum, which means it hosts your data. I don’t think I need to emphasize that protecting your data is important. FreeNAS being built on ZFS, the appliance integrates robust encryption from the get-go, but disk encryption alone leaves several attack vectors wide-open.</summary></entry><entry><title type="html">Storj, The “Sharing” Economy and Why It Matters</title><link href="https://maximerousseau.com/storj-the-sharing-economy-and-why-it-matters/" rel="alternate" type="text/html" title="Storj, The “Sharing” Economy and Why It Matters" /><published>2017-03-18T18:23:30+01:00</published><updated>2017-03-18T18:23:30+01:00</updated><id>https://maximerousseau.com/storj-the-sharing-economy-and-why-it-matters</id><content type="html" xml:base="https://maximerousseau.com/storj-the-sharing-economy-and-why-it-matters/">&lt;p&gt;The sharing economy is a buzzword which has gained enormous traction despite the fact that it remains misunderstood, in my opinion. The luddite politicians who have been vocal against it on the grounds that it’s a dishonest loophole for escaping regulatory frameworks have it obviously wrong, but I feel that even enthusiastic participants and users probably haven’t considered all it’s implications. It’s not just about creating internet marketplaces for everything. The true genius of the sharing economy is twofold.&lt;/p&gt;

&lt;p&gt;First, it creates producers out of what would have been previously considered ordinary consumers. This in itself is an incredible thing which holds the promise of economic emancipation for a segment of the population who were previously unable to jump over the barrier to entry and start making money out of their property. Ordinary folks traditionally have had to buy productive goods and watch them depreciate before their eyes while they made limited use of it. The car is probably the best example of this: it’s an expensive piece of machinery that people pay to own, pay to use, pay to upkeep and often pay to store. It’s an expense, not an investment, because it simply can’t generate enough value in the hands of a single individual. &lt;a href=&quot;https://www.uber.com/invite/maximer1&quot;&gt;Uber&lt;/a&gt; and &lt;a href=&quot;https://turo.com/referral?code=2412490rc875B&quot;&gt;Turo&lt;/a&gt; have changed this, and though a website have transformed thousands of cars from consumer goods to capital goods. In the Marxist sense, people now literally own means of productions.&lt;/p&gt;

&lt;p&gt;Secondly, and this is closely related to the first point, the sharing economy enables optimal use of resources, which produces economic efficiency. Because economic efficiency means extracting every last bit of value out of every resource, be it goods like cars or consumables like energy, it should be championed. It’s good for the economy, good for the environment, and by lowering the cost of certain goods and services, it’s also a social good. To carry on with the transportation example, it appears self-evident that there are more than enough road-going vehicles currently in North-American to satisfy the entire aggregate demand for transportation, if only we had a means of extracting all this dormant value. The sharing economy is this means.&lt;/p&gt;

&lt;p&gt;Information technology has allowed the sharing economy, but it could also greatly profit from it. The turn to cloud-based server infrastructure is great, because it allows for cost-efficient and resilient systems that are easy to scale out, but the true cloud hasn’t yet been achieved. The “cloud” still lives in servers and cabinets which are centralized in server rooms and datacenters, and no amount of local redundancy will rid this model of it’s vulnerabilities to downtime. In essence, it’s really just somebody elses computer(s). Like it or not, &lt;a href=&quot;https://techcrunch.com/2017/02/28/amazon-aws-s3-outage-is-breaking-things-for-a-lot-of-websites-and-apps/&quot;&gt;AWS still suffers from outages&lt;/a&gt;. On the efficiency side of things, having millions of customers on the same ultra-robust infrastructure and enabling nearly automated scale-out makes sense, but in the aggregate, people who want or need their own hardware will continue to build for peak load. This means that a lot of compute, storage and network capacity is wasted while servers wait idly for sufficient solicitation. That’s for servers, but imagine the compute lost in ordinary desktop computers that are always powered on across the world, only to be used to browse Facebook a couple of hours a week.&lt;/p&gt;

&lt;p&gt;The next step in achieving in achieving a connected world is decentralizing compute and storage, making the internet truly everything-proof short of a nuclear apocalypse. Here again, as with the transportation problem, it can easily be imagined that this utopia could be achieve if the available compute and storage resources lying dormant could be utilized fully. Turns out, that’s already in the works, at least with storage: enter &lt;a href=&quot;https://app.storj.io/#/signup?referralLink=peep-tasty-554&quot;&gt;Storj&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://maximerousseau.files.wordpress.com/2017/03/storj_io-logo.png&quot;&gt;&lt;img class=&quot;aligncenter size-medium wp-image-1186&quot; src=&quot;https://maximerousseau.files.wordpress.com/2017/03/storj_io-logo.png?w=295&quot; alt=&quot;&quot; width=&quot;295&quot; height=&quot;300&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Storj project uses blockchain technology to build a network of storage nodes which store data in a way that makes it fast, resilient and efficient. Users with spare storage and bandwidth can assign a certain quantity of hard drive space to be shared on the network, which is advertised via DHT, the same technology that enables trackerless bittorrent downloads, and loaned out through smart contracts to people or businesses who need their files hosted. The protocol manages redundancy, and has provisions for determining which blocs (or shards) go where based on parameters like availability, and speed of the hosting node. The network has been shown to be pretty fast, to the point where you can &lt;a href=&quot;https://vimeo.com/154743500&quot;&gt;stream media from it&lt;/a&gt;. Based on how much data you make available on the network, how much discrete contracts your node services and how well it does it, you get paid in a special &lt;a href=&quot;https://poloniex.com/exchange#BTC_SJCX&quot;&gt;crypto token&lt;/a&gt; that can be redeemed for other crypto and fiat. At scale, this token can also be used to pay for services, giving it real world value which makes it an interesting digital asset to hold.&lt;/p&gt;

&lt;p&gt;The first use case that comes to mind is a Dropbox-like service with lower cost per gigabyte and greater fault-tolerance (and possibly greater speed), but this is not what the Storj team is pursuing, choosing instead to focus on being a backend for other app builders and service providers. This is a smart choice, because the technology opens up incredible opportunities in networks that already exist, but rely on a more traditional server-client architecture. For one, anything that relies on a content distribution network (CDN) could benefit from this technology, in reducing the need for robust server infrastructure to serve content directly, giving redundant access to storage, and possibly reducing the cost of actually getting data from point A to point B. Consider an IP-based TV service provider of the traditional kind, which still puts receivers in it’s customers’ homes. With private Storj network, it could leverage the thousands of unfilled hard drives in it’s receivers to store on-demand content, radically decreasing it’s need for servers and stress on the main trunks of it’s infrastructure. If two neighbourhoods’ worth of receiver hard drives can store all of it’s on-demand content, why overbuild the link from theses two neighborhood to it’s datacenters hundreds of kilometers away? This way of doing things essentially spreads out the load on storage and network over a wider area, making a more efficient use of what resources are already in it.&lt;/p&gt;

&lt;p&gt;There have been other tries at distributed storage before. I’ve been involved in using &lt;a href=&quot;https://www.resilio.com&quot;&gt;Resilio&lt;/a&gt;, formerly known as BitTorrent Sync, in a fairly large production environment to transfer content, and it worked pretty well, but was intended to sync between your own nodes, not necessarily the network at large, making it less interesting in terms of it’s ability to spread the load. &lt;a href=&quot;https://syncthing.net&quot;&gt;Syncthing&lt;/a&gt; offers more or the less the same feature-set as Resilio, is open-souce and cross-platform, but suffers the same drawback of being aimed at providing file-sharing between nodes you operate yourself. None of these solutions do anything to utilize dormant resources, let alone remunerate you for contributing to the network. To put it otherwise, existing solutions are still within the traditional “cloud” paradigm of specialized machines doing particular jobs, wheres Storj goes way beyond that into the distributed cloud.&lt;/p&gt;

&lt;p&gt;If you have spare storage, and chances are that if you live in the developed world you most probably do, I strongly suggest that you encourage the project and download their app and start sharing. The project currently has several petabytes (a million gigbytes) of available storage, making it probably the biggest experiment in distributed storage to ever have existed. With important commercial agreements having recently kicked in, the product being out of beta, and paid access billing systems now fully functional, the network is surely going to see a spike of activity. You’ll be making money off storage you otherwise wouldn’t use, but you’d also be contributing in technology that will surely power power the internet of tomorrow. &lt;a href=&quot;https://storj.io/share.html&quot;&gt;The sharing page has everything you need to become a data farmer&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Projets like these show what the sharing economy is really about. It’s not really about sharing in the altruistic sense, it’s about using technology to break down barriers to entry and making markets work better, decentralizing all the things, and empowering consumers by promoting them to the status of producer.&lt;/p&gt;</content><author><name></name></author><category term="all" /><category term="cloud" /><category term="computer" /><category term="computing" /><category term="distributed" /><category term="network" /><category term="networking" /><category term="resilio" /><category term="storage" /><category term="storj" /><category term="synthing" /><summary type="html">The sharing economy is a buzzword which has gained enormous traction despite the fact that it remains misunderstood, in my opinion. The luddite politicians who have been vocal against it on the grounds that it’s a dishonest loophole for escaping regulatory frameworks have it obviously wrong, but I feel that even enthusiastic participants and users probably haven’t considered all it’s implications. It’s not just about creating internet marketplaces for everything. The true genius of the sharing economy is twofold.</summary></entry><entry><title type="html">In Defense of Political Radicals</title><link href="https://maximerousseau.com/in-defense-of-political-radicals/" rel="alternate" type="text/html" title="In Defense of Political Radicals" /><published>2017-01-12T04:59:22+01:00</published><updated>2017-01-12T04:59:22+01:00</updated><id>https://maximerousseau.com/in-defense-of-political-radicals</id><content type="html" xml:base="https://maximerousseau.com/in-defense-of-political-radicals/">&lt;p&gt;Sometimes, life imitates shitposting. Under the guise of conducting research, I’ve come to join and like an absolutely inordinate amount of politically-inclined shitposting groups and pages. It’s bad, to the point where normie posts about meals, trips and life achievements have been completely drowned out in &lt;a href=&quot;http://knowyourmeme.com/memes/political-compass&quot;&gt;political compass memes&lt;/a&gt; and &lt;a href=&quot;http://knowyourmeme.com/memes/subcultures/anarcho-capitalism&quot;&gt;ancap smileys&lt;/a&gt;. Right around the time where radical centrist memes began making an appearance in &lt;a href=&quot;https://www.facebook.com/groups/1746526505589609/?fref=nf&quot;&gt;my favourite meme group&lt;/a&gt;, I became aware of &lt;a href=&quot;http://www.mixedmentalarts.club/single-post/2016/12/16/Anarcho-Capitalism-What-Happens-When-Piggy-Visits-His-Fantasy-Island&quot;&gt;a piece by Hunter Maats&lt;/a&gt; which perfectly represents everything that’s wrong behind the idea that inspired the meme.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://maximerousseau.files.wordpress.com/2017/01/screen-shot-2017-01-11-at-10-58-58-pm.png&quot;&gt;&lt;img class=&quot;size-full wp-image-1172&quot; src=&quot;https://maximerousseau.files.wordpress.com/2017/01/screen-shot-2017-01-11-at-10-58-58-pm.png&quot; alt=&quot;This is what Hunter looks like. See the original tweet in context. &quot; width=&quot;476&quot; height=&quot;543&quot; /&gt;&lt;/a&gt; This is what Hunter Maats looks like. &lt;a href=&quot;https://twitter.com/max302/status/810710069729959936&quot;&gt;See the original tweet in context&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In his extremely verbose article, Maats perform an intricate kata of mixed mental arts, chopping down conveniently constructed straw men built up in the shape of &lt;a href=&quot;http://tomwoods.com&quot;&gt;Tom Woods&lt;/a&gt;, intended to be a sit-in for the entire ideology of anarcho-capitalism. Between ad-homs (intended as bait?) and masturbating about how widely he has read, the author does a pretty shitty job of explaining to us why and how anarcho-capitalism sucks, relying mostly on choice arguments such as MUH HUMAN NATURE. I’m not going to white-knight for Tom, simply because he doesn’t need my help. I’m not going to refute the piece too, because the concerns Hunter has with anarcho-capitalism have been addressed before. Maybe he hasn’t read widely enough. What I am going to do is point out how the underpinning of Maat’s “arguments” are essentially the same as those upon which the states builds it’s own perverse logic, in that, hopefully make a sound defense of political radicals, a group in which I include libertarians.&lt;/p&gt;

&lt;p&gt;What aggravates libertarians more than anything else about the state is its hubris: how a small group of elected officials, upon manning the controls of apparatus of the state, suddenly come to think of themselves as gods, who with sufficient time and budgetary appropriations can solve everything. Functionaries of the states and their elected political overlords have different interests, but the latter coincide when it comes to making the state look like an all-knowning entity with the power to fix everything. We can make the Middle East democratic. We can save people from their self-destructive habits through nudging and subsidies. We can engineer our way into permanent economic growth. We can provide everything for everyone forever.&lt;/p&gt;

&lt;p&gt;This hubris of the state is also that of the technocrat, and apparently, Hunter Maats. While reading his piece, I got the impression that Maats’ point was that if only everybody read as much New York Times best sellers as he did, we could finally move towards an improved society; if only everybody accepted consensus opinions on subjects like “human nature”, we’d have a solid foundation upon which we can build a better society. In doing this, Hunter commits what should amount to a cardinal sin to anybody who believes in science: he behaves as if he had found pure, eternal, objective truth between the covers of paperbacks. His pretension to be able to build politics upon a solid foundation is nonsensical:  firstly because it is epistemically unsound, and secondly because understanding politics as science is absurd&lt;strong&gt;*&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Modernity was built on doubt; such a well read person as Maats aught to know this. Descartes methodological doubt constitutes the basis for modern science, and thinkers like Karl Popper who have built upon it have shed light upon one of the foremost criteria of truth: falsifiability. In the face of science, the  soundest of knowledge is to be questioned, all fact is provisional by definition. Men and women of science aught to be humbled by this sword of Damocles inherent to the process of discovering and rediscovering truth. Knowledge is a shaky edifice by virtue of the fact that it’s building-blocks are subject to crumble at any time. When he makes cocksure pronouncements on the existence of an essence of man or processes of evolution on the scale of universe, what Maats is doing isn’t science; he’s simultaneously praying at the altar of science and desecrating it with his arrogance.&lt;/p&gt;

&lt;p&gt;Ironically, the Austrian school of economics, the works of which Maats refers to as mental masturbation, does a much better job at being humble in it’s view of the science of economics. To be sure, the Austrian methodology could be critiqued, but its insistance that economic preferences are subjective and largely impenetrable are a sign of committal to the idea that some things simply can’t be perfectly revealed through science.&lt;/p&gt;

&lt;p&gt;So, one could say that Maat’s refutation of anarcho-capitalism in favour of governance based on science is significantly weakened by the fact that he fails to acknowledge that every bit of knowledge he builds his case on could be proven to be completely false. What completely demolishes his case against Woods / libertarians / ancaps is his complete lack of understanding of what this person and groups are about fundamentally.&lt;/p&gt;

&lt;p&gt;The libertarian mouvement is a political one. This implies that it interacts with other mouvements, actors and institutions that are contemporary to us; it attempts to influence the status quo in a manner coherent with it’s founding principles. Hunter portraits the movement as striving for the establishment, &lt;em&gt;ex-nihilo, &lt;/em&gt;of a stateless society; this is of course ridiculous, because politics is by it’s very nature a process. How did we get here, politically? According to historians and scholars on nationalism like Benedict Anderson, the state was formed around the state-sponsorship of an official culture through things like language and education, progressively asserting itself as a incarnation of the collective will which bore much more legitimacy than that of divine-right monarchs. Democracy is a relatively recent ideal which best channels this ideal of legitimacy, and which has been proven to be robust, if imperfect. There is no pivotal moment where our current institutions magically appeared. There is no teleological “march of progress” leading up to democracy and the modern state. What we have before us is the results of human action, the slow process of humans shaping their environments through interacting with one another.&lt;/p&gt;

&lt;p&gt;We libertarians, the political ones at least, wish to participate in this process for the betterment for our society. We are well aware of our institutional surroundings, as demonstrated by our eagerness to criticize the state, its innate immorality and spectacular shortcomings. I know of nobody who wishes to achieve the libertarian ideals while ridding ourselves of what good things we have invented collectively (the idea of courts and arbitration of disputes, social institutions, and even &lt;em&gt;GASP&lt;/em&gt; roads!), but this does not mean we do not carry a utopian vision of what we would want society to look like. This utopia is a guiding light, in the same way the sun, moon and stars can be used for navigation despite being out of reach. If politics is constantly in movement and evolution, this ideal is the direction of our vector, not a mere point.&lt;/p&gt;

&lt;p&gt;In a sense, Maats is attempting to discredit an inherently political concept, the ideology of libertarianism, in strictly apolitical terms. In his article and follow-up tweet to me, he makes it sound like being political is a bad thing, and that science alone can yield a better future. Is he forgetting that the Kants and Rousseaus that he likes to namedrop where also guided by an ideal, and imminent political? Is he denying that their ideas had an influence on the foundation of our societies, despite their respective utopias never having been achieved? In citing Diamond, Pinker, &lt;em&gt;et al&lt;/em&gt; as “evidence” (his words) of some sort of human nature and transcendant process towards progress, he discards the role of human action in the shaping or our world. The thinkers, the people that their ideas sway, the practitioners of politics and the masses they mobilized, the groups that coalesced around this or that aim or objective, they are the real force behind the creation of our societal order. The very idea of the contemporary nation-state that is so dear to Hunter was borne of an assembly of myths, from the social contract to the “collective will”. What is to say that ideas can’t change the current order of things?&lt;/p&gt;

&lt;p&gt;In his attempt to evacuate politics in order to assume the stance of the “realist” (again, his words), Maats dons the robes of the soul-less technocrat, eager to engineer a better future but all too quick to forget the human beings that will inhabit it. Like the state, he adopts a quasi-religious belief in the “just a bit more effort” mentality and carefully plans a map to the exact location of what turns out to be a mirage of brighter tomorrow. In the end, the only place he’s bound to end up after much adjustment, readjustment and sensible choices is further down the road to serfdom. The real enemies of human progress aren’t on the ideologues on the left or the right, who dare imagine a different world. The real threat, if one indeed does exist, are radical centrists like Maats, who look to smother the act of politics in what they perceive to be truth.&lt;/p&gt;

&lt;p&gt;Radicals, keep doing what you do, your ideas and actions are the engine of history. Hunter, once you’re done beating off to best-sellers, you can come out and play too.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;*This claim might sound weird coming from a political scientist. In the french language, there exists a distinction between &lt;em&gt;la politique &lt;/em&gt;and &lt;em&gt;le politique. &lt;/em&gt;The first refers to the conduct of politics, the interaction between political actors (campaigning, coalition forming, media ops, etc), while the second refers to the abstract notion of the affairs of the state and governance. Here, I am referring to &lt;em&gt;la politique.&lt;/em&gt; To be sure, my discipline, in so far as it concerns the analysis of public policy, voter behaviour and scholarly analysis of political situations is absolutely a science. When discussing ideology however, this is not what we’re talking about.&lt;/p&gt;</content><author><name></name></author><category term="all" /><category term="anarcho" /><category term="ancapistan" /><category term="capitalism" /><category term="hunter-maats" /><category term="libertarian" /><category term="libertarianism" /><category term="politics" /><category term="tom-woods" /><summary type="html">Sometimes, life imitates shitposting. Under the guise of conducting research, I’ve come to join and like an absolutely inordinate amount of politically-inclined shitposting groups and pages. It’s bad, to the point where normie posts about meals, trips and life achievements have been completely drowned out in political compass memes and ancap smileys. Right around the time where radical centrist memes began making an appearance in my favourite meme group, I became aware of a piece by Hunter Maats which perfectly represents everything that’s wrong behind the idea that inspired the meme.</summary></entry></feed>